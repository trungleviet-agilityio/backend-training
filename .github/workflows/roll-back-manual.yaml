name: "Manual: VPS Rollback"
# Manually rollback docker-practice deployment on VPS to a specific Docker image tag
# Uses /docker-practice/Dockerfile and can use scripts from /docker-practice/scripts
run-name: ${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        type: choice
        default: staging
        options:
          - staging
          - production
      commit_hash:
        description: 'Docker image tag or commit hash to rollback to'
        required: true
        type: string
      dry_run:
        description: 'Dry run?'
        required: true
        type: choice
        default: 'true'
        options:
          - 'true'
          - 'false'

env:
  DOCKER_IMAGE: docker-practice-app
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  rollback:
    name: Rollback
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Deploy to VPS (Rollback)
        if: inputs.dry_run == 'false'
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ inputs.commit_hash }} || true
            docker stop docker-practice-app || true
            docker rm docker-practice-app || true
            docker run -d --name docker-practice-app --restart unless-stopped -p 8000:8000 -v /app/data:/app/data ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ inputs.commit_hash }}
            docker image prune -f
      - name: Dry Run
        if: inputs.dry_run == 'true'
        run: |
          echo "üîç Dry Run Mode"
          echo "=============="
          echo "Would rollback to image tag: ${{ inputs.commit_hash }} on VPS."
          echo "No changes were made."

  health-check:
    needs: rollback
    if: always() && inputs.dry_run == 'false'
    uses: ./.github/workflows/shared-ci-jobs.yml
    with:
      target-branch: ${{ github.ref_name }}
      container_name: docker-practice-app
      healthcheck_url: http://localhost:8000/health/
    secrets:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
      VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}

  rollback-status:
    name: Rollback Status
    runs-on: ubuntu-latest
    needs: [rollback, health-check]
    if: always()
    steps:
      - name: Report rollback status
        run: |
          echo "Rollback Status Report:"
          echo "======================"

          if [[ "${{ needs.rollback.result }}" != "success" ]]; then
            echo "‚ùå Rollback failed"
            exit 1
          fi

          if [[ "${{ needs.health-check.result }}" != "success" ]]; then
            echo "‚ùå Rollback verification failed"
            exit 1
          fi

          echo "‚úÖ Rollback completed successfully!"
          echo "::notice::Application rolled back to commit ${{ inputs.commit_hash }}"

          # Summary
          echo ""
          echo "Rollback Summary:"
          echo "- Rollback Process: ‚úÖ"
          echo "- Health Check: ‚úÖ"
