name: "Manual: Build, Push, Deploy (VPS)"
# Manually build, push, and deploy docker-practice to VPS using Docker and SSH
# Uses /docker-practice/Dockerfile and can use scripts from /docker-practice/scripts

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string
      docker_tag:
        description: 'Docker image tag (default: latest)'
        required: false
        default: 'latest'
        type: string
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  DOCKER_IMAGE: docker-practice-app
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  shared-ci:
    uses: ./.github/workflows/shared-ci-jobs.yml
    with:
      target-branch: ${{ inputs.branch }}
      skip-on-no-changes: false
      run-docker-compose: false
    secrets: inherit

  build-and-push:
    needs: shared-ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}
          tags: |
            type=raw,value=${{ inputs.docker_tag }}
            type=sha,format=short
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docker-practice
          file: ./docker-practice/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ inputs.docker_tag }} || true
            docker stop docker-practice-app || true
            docker rm docker-practice-app || true
            docker run -d --name docker-practice-app --restart unless-stopped -p 8000:8000 -v /app/data:/app/data ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ inputs.docker_tag }}
            docker image prune -f

  health-check:
    needs: deploy
    uses: ./.github/workflows/shared-ci-jobs.yml
    with:
      target-branch: ${{ inputs.branch }}
      container_name: docker-practice-app
      healthcheck_url: http://localhost:8000/health/
    secrets:
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USERNAME: ${{ secrets.VPS_USERNAME }}
      VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
