name: Delivery (Manual)
run-name: ${{ github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        default: 'staging'
        description: 'Deploy to:'
        type: choice
        options:
          - staging
          - production
      branch:
        required: true
        default: 'develop'
        description: 'Branch to deploy'
        type: string
      dry_run:
        required: true
        default: 'true'
        description: 'Dry run?'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  PYTHONANYWHERE_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
  PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
  PYTHONANYWHERE_WEBAPP_NAME: ${{ secrets.PYTHONANYWHERE_WEBAPP_NAME }}

jobs:
  delivery_manual:
    name: Delivery Manual
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pythonanywhere-client

      - name: Build Docker image (optional)
        run: |
          docker build -f docker-practice/Dockerfile -t my-app:latest docker-practice/

      - name: Deploy to PythonAnywhere
        if: inputs.dry_run == 'false'
        run: |
          echo "üöÄ Deploying to PythonAnywhere..."
          echo "üì¶ Environment: ${{ inputs.environment }}"
          echo "üåø Branch: ${{ inputs.branch }}"
          echo "üîß Webapp: ${{ env.PYTHONANYWHERE_WEBAPP_NAME }}"

          # Create PythonAnywhere client
          python -c "
          from pythonanywhere_client import PythonAnywhereClient
          client = PythonAnywhereClient(
              username='${{ env.PYTHONANYWHERE_USERNAME }}',
              api_token='${{ env.PYTHONANYWHERE_API_TOKEN }}'
          )

          # Reload the web app
          client.reload_webapp('${{ env.PYTHONANYWHERE_WEBAPP_NAME }}')
          print('‚úÖ Webapp reloaded successfully')
          "

      - name: Dry Run
        if: inputs.dry_run == 'true'
        run: |
          echo "üîç Dry Run Mode"
          echo "=============="
          echo "üì¶ Environment: ${{ inputs.environment }}"
          echo "üåø Branch: ${{ inputs.branch }}"
          echo "üîß Webapp: ${{ env.PYTHONANYWHERE_WEBAPP_NAME }}"
          echo ""
          echo "‚úÖ This was a dry run - no changes were made"
