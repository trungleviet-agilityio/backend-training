name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: string
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  PYTHONANYWHERE_USERNAME: ${{ secrets.PYTHONANYWHERE_USERNAME }}
  PYTHONANYWHERE_API_TOKEN: ${{ secrets.PYTHONANYWHERE_API_TOKEN }}
  PYTHONANYWHERE_WEBAPP_NAME: ${{ secrets.PYTHONANYWHERE_WEBAPP_NAME }}

jobs:
  validate-input:
    name: Validate Input
    runs-on: ubuntu-latest
    outputs:
      target-env: ${{ steps.validate.outputs.environment }}
      deploy-branch: ${{ steps.validate.outputs.branch }}

    steps:
      - name: Validate deployment inputs
        id: validate
        run: |
          echo "Validating manual deployment inputs..."

          # Validate branch
          BRANCH="${{ github.event.inputs.branch }}"
          if [[ -z "$BRANCH" ]]; then
            BRANCH="main"
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

          # Validate environment
          ENV="${{ github.event.inputs.environment }}"
          if [[ "$ENV" != "production" && "$ENV" != "staging" ]]; then
            echo "❌ Invalid environment: $ENV"
            exit 1
          fi
          echo "environment=$ENV" >> $GITHUB_OUTPUT

          echo "✅ Input validation passed"
          echo "- Branch: $BRANCH"
          echo "- Environment: $ENV"

  deploy:
    name: Deploy to PythonAnywhere
    runs-on: ubuntu-latest
    needs: validate-input
    environment: ${{ needs.validate-input.outputs.target-env }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-input.outputs.deploy-branch }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pythonanywhere-client

      - name: Deploy to PythonAnywhere
        run: |
          echo "Deploying to PythonAnywhere..."
          echo "- Webapp: ${{ env.PYTHONANYWHERE_WEBAPP_NAME }}"
          echo "- Environment: ${{ needs.validate-input.outputs.target-env }}"
          echo "- Branch: ${{ needs.validate-input.outputs.deploy-branch }}"

          # Create PythonAnywhere client
          python -c "
          from pythonanywhere_client import PythonAnywhereClient
          client = PythonAnywhereClient(
              username='${{ env.PYTHONANYWHERE_USERNAME }}',
              api_token='${{ env.PYTHONANYWHERE_API_TOKEN }}'
          )

          # Reload the web app
          client.reload_webapp('${{ env.PYTHONANYWHERE_WEBAPP_NAME }}')
          print('✅ Webapp reloaded successfully')
          "

          echo "✅ PythonAnywhere deployment initiated"

  deployment-status:
    name: Deployment Status
    runs-on: ubuntu-latest
    needs: [validate-input, deploy]
    if: always()

    steps:
      - name: Report deployment status
        run: |
          echo "Manual Deployment Status Report:"
          echo "================================"

          if [[ "${{ needs.validate-input.result }}" != "success" ]]; then
            echo "❌ Input validation failed"
            exit 1
          fi

          if [[ "${{ needs.deploy.result }}" != "success" ]]; then
            echo "❌ Manual deployment failed"
            exit 1
          fi

          echo "✅ Manual deployment completed successfully!"
          echo "- Environment: ${{ needs.validate-input.outputs.target-env }}"
          echo "- Branch: ${{ needs.validate-input.outputs.deploy-branch }}"
          echo "::notice::Manual deployment successful"
