name: Code Quality & Tests

on:
  # Run on PRs to main/develop
  pull_request:
    branches:
      - main
      - develop
    paths:
      - 'docker-practice/**'

jobs:
  changes:
    name: Check Changes
    runs-on: ubuntu-latest
    outputs:
      python: ${{ steps.filter.outputs.python }}
      config: ${{ steps.filter.outputs.config }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            python:
              - 'docker-practice/**/*.py'
              - 'docker-practice/requirements.txt'
              - 'docker-practice/pyproject.toml'
            config:
              - 'docker-practice/**/*.yml'
              - 'docker-practice/**/*.yaml'
              - 'docker-practice/**/*.toml'
              - 'docker-practice/**/*.ini'

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: changes
    defaults:
      run:
        working-directory: docker-practice

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run linting
        run: |
          echo "Running code quality checks..."
          ruff check . --output-format=github
          black --check --diff .
          echo "✅ Code quality checks passed!"

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.python == 'true'
    defaults:
      run:
        working-directory: docker-practice

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          DJANGO_SETTINGS_MODULE: core.settings.test
        run: |
          echo "Running unit tests..."
          python manage.py migrate --no-input
          pytest -v --tb=short
          echo "✅ All tests passed!"

  ci-complete:
    name: CI Complete
    runs-on: ubuntu-latest
    needs: [changes, lint, test]
    if: always()
    steps:
      - name: Check CI status
        run: |
          echo "Checking CI status..."

          # Check if any job failed
          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "❌ Code quality checks failed"
            exit 1
          fi

          # Only check test results if tests were supposed to run
          if [[ "${{ needs.changes.outputs.python }}" == "true" ]]; then
            if [[ "${{ needs.test.result }}" != "success" ]]; then
              echo "❌ Unit tests failed"
              exit 1
            fi
            echo "✅ All checks passed (including tests)!"
          else
            echo "✅ Code quality checks passed (no Python changes - tests skipped)!"
          fi

          echo "::notice::CI pipeline completed successfully"
