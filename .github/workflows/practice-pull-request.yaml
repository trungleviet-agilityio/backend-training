name: PR to Develop

on:
  pull_request:
    branches:
      - develop
    paths:
      - 'docker-practice/**'

jobs:
  verify-commits:
    name: Verify Commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check commit verification
        run: |
          echo "Checking commit verification for all commits in PR..."
          for commit in $(git rev-list origin/${{ github.base_ref }}..${{ github.event.pull_request.head.sha }}); do
            if ! git verify-commit $commit 2>/dev/null; then
              echo "❌ Commit $commit is not verified"
              echo "::error::All commits must be signed and verified"
              exit 1
            else
              echo "✅ Commit $commit is verified"
            fi
          done
          echo "All commits are properly verified!"

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docker-practice

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run linting
        run: |
          echo "Running code quality checks..."
          ruff check . --output-format=github
          black --check --diff .
          echo "✅ Code quality checks passed!"

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docker-practice

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
          DJANGO_SETTINGS_MODULE: core.settings
        run: |
          echo "Running unit tests..."
          python manage.py migrate --no-input
          pytest -v --tb=short
          echo "✅ All tests passed!"

  merge-ready:
    name: Merge Ready
    runs-on: ubuntu-latest
    needs: [verify-commits, lint, test]
    if: always()
    steps:
      - name: Check all jobs status
        run: |
          echo "Checking status of all required jobs..."

          # Check if any job failed
          if [[ "${{ needs.verify-commits.result }}" != "success" ]]; then
            echo "❌ Commit verification failed"
            exit 1
          fi

          if [[ "${{ needs.lint.result }}" != "success" ]]; then
            echo "❌ Code quality checks failed"
            exit 1
          fi

          if [[ "${{ needs.test.result }}" != "success" ]]; then
            echo "❌ Unit tests failed"
            exit 1
          fi

          echo "✅ All checks passed! PR is ready to merge."
          echo "::notice::All quality gates passed - merge button is enabled"
