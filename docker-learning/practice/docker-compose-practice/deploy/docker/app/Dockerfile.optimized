# Optimized Multi-stage Dockerfile for faster builds
# Build time improvements: ~5-10x faster rebuilds

# Base stage with system dependencies
FROM python:3.11-slim AS base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies in single layer
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        curl \
        netcat-traditional \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Dependencies stage - separate from source code
FROM base AS deps

# Copy only requirements first (better caching)
COPY requirements/ requirements/

# Use BuildKit cache mount for pip (much faster)
ARG ENV=development
RUN --mount=type=cache,target=/root/.cache/pip \
    if [ "$ENV" = "production" ]; then \
      pip install -r requirements/prod.txt; \
    else \
      pip install -r requirements/dev.txt; \
    fi

# Final runtime stage
FROM base AS final

# Copy installed packages from deps stage
COPY --from=deps /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=deps /usr/local/bin /usr/local/bin

# Create app directory
WORKDIR /app

# Copy source code (this layer changes most often)
COPY . /app/

# Create optimized entrypoint script
RUN echo '#!/bin/sh\n\
echo "Waiting for Redis..."\n\
while ! nc -z $REDIS_HOST $REDIS_PORT; do\n\
  sleep 0.1\n\
done\n\
echo "Redis is ready!"\n\
export PYTHONPATH=/app\n\
if [ "$FLASK_ENV" = "development" ]; then\n\
    echo "Starting development server..."\n\
    exec python main.py\n\
else\n\
    echo "Starting production server..."\n\
    exec gunicorn --bind 0.0.0.0:5000 \\\n\
        --workers ${GUNICORN_WORKERS:-4} \\\n\
        --threads ${GUNICORN_THREADS:-2} \\\n\
        --timeout ${GUNICORN_TIMEOUT:-30} \\\n\
        --preload \\\n\
        "main:app"\n\
fi' > /entrypoint.sh && chmod +x /entrypoint.sh

# Create non-root user for security
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

USER appuser

EXPOSE 5000

ENTRYPOINT ["/entrypoint.sh"]
