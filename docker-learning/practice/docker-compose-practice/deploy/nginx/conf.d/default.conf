# Load balancing configuration for multiple Flask instances
# Docker Compose automatically load balances when using service name 'app'
upstream flask_app {
    # Load balancing method
    least_conn;
    
    # Docker Compose automatically handles multiple instances
    # When you scale with: docker-compose up --scale app=3
    # Docker's internal DNS will round-robin between app_1, app_2, app_3
    server app:5000 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name localhost;

    # Enable gzip compression for better performance
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;

    # Add custom headers to track load balancing
    add_header X-Served-By $hostname;
    add_header X-Upstream-Server $upstream_addr;

    location / {
        proxy_pass http://flask_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for better reliability
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Enable keepalive for better performance
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # Add headers to see which instance served the request
        proxy_set_header X-Request-ID $request_id;
    }

    location /static {
        alias /app/static;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    location /health {
        proxy_pass http://flask_app;
        access_log off;
        add_header Content-Type application/json;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Nginx status endpoint for monitoring
    location /nginx-status {
        stub_status;
        access_log off;
        allow 127.0.0.1;
        allow 172.18.0.0/16;  # Allow from Docker network
        deny all;
    }
} 